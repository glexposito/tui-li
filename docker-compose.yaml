services:
  app:
    image: tui-li/app:local
    build:
      context: .
      dockerfile: Dockerfile
    pull_policy: never
    container_name: tui-li
    ports:
      - "8080:80"        # use http://localhost:8080
      # optional: debug direct API (bypass nginx)
      - "3000:3000"
    environment:
      HOST: 0.0.0.0      # Rust binds all interfaces
      PORT: 3000
      RUST_LOG: info
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
      DYNAMODB_ENDPOINT: http://dynamodb:8000
    depends_on:
      - dynamodb
    restart: unless-stopped

  dynamodb:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb
    # important: include the JAR when overriding the command
    user: "0:0"
    working_dir: /home/dynamodblocal
    command: [ "-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "/home/dynamodblocal/data", "-port", "8000" ]
    ports:
      - "8000:8000"
    volumes:
      - dynamodb_data:/home/dynamodblocal/data
    restart: unless-stopped

  # Optional web UI at http://localhost:8001
  dynamodb_admin:
    image: aaronshaf/dynamodb-admin
    container_name: dynamodb-admin
    environment:
      DYNAMO_ENDPOINT: http://dynamodb:8000
    ports:
      - "8001:8001"
    depends_on:
      - dynamodb
    restart: unless-stopped

  init-dynamodb:
    image: amazon/aws-cli:latest
    depends_on:
      dynamodb:
        condition: service_started
    environment:
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
    entrypoint: >
      sh -c '
      echo "⏳ Waiting for DynamoDB...";
      until aws dynamodb list-tables --endpoint-url http://dynamodb:8000 >/dev/null 2>&1; do
        sleep 2;
      done;
      echo "✅ DynamoDB ready";
      if aws dynamodb describe-table --table-name tui-li-urls --endpoint-url http://dynamodb:8000 >/dev/null 2>&1; then
        echo "ℹ️ Table exists";
      else
        echo "⚡ Creating table...";
        aws dynamodb create-table --table-name tui-li-urls --attribute-definitions AttributeName=pk,AttributeType=S --key-schema AttributeName=pk,KeyType=HASH --billing-mode PAY_PER_REQUEST --endpoint-url http://dynamodb:8000;
        echo "✅ Table created";
      fi
      '
    restart: "no"

volumes:
  dynamodb_data:
