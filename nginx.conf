events {}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;

  # Per-IP rate limit: 20 req/min, burst 20
  limit_req_zone $binary_remote_addr zone=api_ratelimit:10m rate=20r/m;

  server {
    # Behind a TLS-terminating LB â†’ traffic arrives as HTTP on :80
    listen 80;
    server_name _;

    # React build (static files served by Nginx)
    root  /usr/share/nginx/html;
    index index.html;

    # ---------- Health check -> Actix ----------
    location = /health {
      access_log off;
      proxy_pass http://127.0.0.1:3000/health;   # local upstream over HTTP
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;  # force original scheme = https
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port 443;
      proxy_redirect off;
    }

    # ---------- EXACT "/" -> serve React HTML ----------
    location = / {
      try_files /index.html =404;
    }

    # Direct index
    location = /index.html {
      try_files $uri =404;
      access_log off;
    }

    # ---------- Static assets (Vite) ----------
    location /assets/ {
      try_files $uri =404;
      access_log off;
      expires 1y;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # MIME belt-and-braces
    location ~* \.js$  {
      types { }
      default_type application/javascript;
      try_files $uri =404;
      access_log off;
      expires 1y;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }
    location ~* \.css$ {
      types { }
      default_type text/css;
      try_files $uri =404;
      access_log off;
      expires 1y;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Common static files
    location = /favicon.ico   { try_files $uri =404; access_log off; }
    location = /robots.txt    { try_files $uri =404; access_log off; }
    location = /manifest.json { try_files $uri =404; access_log off; }
    location = /vite.svg      { try_files $uri =404; access_log off; }

    # ---------- EVERYTHING ELSE -> Rust API on :3000 ----------
    location / {
      # Hard throttle after burst
      limit_req        zone=api_ratelimit burst=20 nodelay;
      limit_req_status 429;
      add_header       Retry-After 3 always;

      proxy_pass http://127.0.0.1:3000;          # local upstream over HTTP
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;  # force original scheme = https
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port 443;

      # Normalize any absolute http:// redirects from upstream to https://
      proxy_redirect http:// https://;
    }
  }
}
