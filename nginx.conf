events {}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  server {
    listen 80;

    # React build
    root  /usr/share/nginx/html;
    index index.html;

    # EXACT "/" -> serve React HTML
    location = / { try_files /index.html =404; }

    # Direct index
    location = /index.html { try_files $uri =404; access_log off; }

    # Static assets (Vite)
    location /assets/ {
      try_files $uri =404;
      access_log off;
      expires 1y;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Force correct MIME types (belt-and-braces)
    location ~* \.js$  {
      types { }
      default_type application/javascript;
      try_files $uri =404;
      access_log off;
      expires 1y;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }
    location ~* \.css$ {
      types { }
      default_type text/css;
      try_files $uri =404;
      access_log off;
      expires 1y;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Common static files
    location = /favicon.ico   { try_files $uri =404; access_log off; }
    location = /robots.txt    { try_files $uri =404; access_log off; }
    location = /manifest.json { try_files $uri =404; access_log off; }
    location = /vite.svg      { try_files $uri =404; access_log off; }

    # EVERYTHING ELSE -> Rust API on 3000 + CORS
    location / {
      # --- CORS preflight ---
      if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, X-Requested-With" always;
        add_header Access-Control-Max-Age 86400 always;
        add_header Content-Length 0;
        add_header Content-Type "text/plain; charset=UTF-8";
        return 204;
      }

      # --- CORS headers on normal responses ---
      add_header Access-Control-Allow-Origin "*" always;
      add_header Access-Control-Allow-Methods "POST, OPTIONS" always;
      add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, X-Requested-With" always;

      proxy_pass http://127.0.0.1:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
    }
  }
}
